name: Docker Image CI - Release
permissions:
  contents: write

on:
  workflow_dispatch:

jobs:

  CreateRelease:
    runs-on: ubuntu-latest

    steps:

    - name: Check out the code
      uses: actions/checkout@v2

    - name: Extract commit SHA
      id: sha
      run: echo "SHORT_SHA=$(git rev-parse --short=7 ${{ github.sha }})" >> $GITHUB_ENV

    - name: Dump GitHub Actions context
      shell: bash
      run: echo "$GITHUB_CONTEXT"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_ACCESSTOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        platforms: linux/amd64,linux/arm64
        tags:   ${{ secrets.DOCKER_USERNAME }}/teltonika-codec-to-mqtt:${{ env.SHORT_SHA }} ,
                ${{ secrets.DOCKER_USERNAME }}/teltonika-codec-to-mqtt:latest

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.SHORT_SHA }}
        release_name: Release ${{ env.SHORT_SHA }}
        draft: false
        prerelease: false
        body: |
          Docker images built and pushed to DockerHub:
          - `${{ secrets.DOCKER_USERNAME }}/teltonika-codec-to-mqtt:${{ env.SHORT_SHA }}`
          - `${{ secrets.DOCKER_USERNAME }}/teltonika-codec-to-mqtt:latest`

